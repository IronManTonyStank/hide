// SMS
<uses-permission android:name="android.permission.SEND_SMS" />
<uses-permission android:name="android.permission.INTERNET"/>

package com.example.smstrial;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.telephony.SmsManager;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.ActivityCompat;
import androidx.core.content.ContextCompat;

public class MainActivity extends AppCompatActivity {

    private static final int PERMISSION_REQUEST_SEND_SMS = 0;

    private Button sendBtn;
    private EditText txtPhoneNo;
    private EditText txtMessage;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        sendBtn = findViewById(R.id.btn);
        txtPhoneNo = findViewById(R.id.phn);
        txtMessage = findViewById(R.id.msg);

        sendBtn.setOnClickListener(v->{
            if (ContextCompat.checkSelfPermission(this, Manifest.permission.SEND_SMS) == PERMISSION_REQUEST_SEND_SMS){
                SmsManager man = SmsManager.getDefault();
                man.sendTextMessage(txtPhoneNo.getText().toString(),null, txtMessage.getText().toString(),null,null);
            } else {
                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.SEND_SMS},PERMISSION_REQUEST_SEND_SMS);
            }
        });
    }
}



// **********************************************
//Webview
<uses-permission android:name="android.permission.INTERNET"/>

package com.example.website;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.Button;
import android.widget.EditText;

public class MainActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        EditText url = findViewById(R.id.url);
        Button get = findViewById(R.id.get);
        WebView w = findViewById(R.id.web);

        get.setOnClickListener(view ->{
            String val = url.getText().toString();
            w.setWebViewClient(new MyClient());
            w.loadUrl(val);
        });
    }
    public class MyClient extends WebViewClient{
        @Override
        public boolean shouldOverrideUrlLoading(WebView view, String url) {
            view.loadUrl(url);
            return true;
        }
    }
}


// **********************************************
//GPS
package com.example.gpstrial;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import android.content.Context;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.location.LocationListener;
import android.location.LocationManager;
import android.nfc.Tag;
import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.google.android.gms.location.FusedLocationProviderClient;
import com.google.android.gms.location.LocationServices;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.Locale;
import java.util.Scanner;

public class MainActivity extends AppCompatActivity {

    EditText loc_ipt, lat_ipt, lon_ipt;
    Button search_btn, search_loc;
    TextView lat_val, lon_val, write_loc;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Geocoder geocoder = new Geocoder(this, Locale.getDefault());

        loc_ipt = findViewById(R.id.loc_ipt);
        search_btn = findViewById(R.id.search_btn);
        lat_val = findViewById(R.id.lat_val);
        lon_val = findViewById(R.id.lon_val);

        lat_ipt = findViewById(R.id.lat_ipt);
        lon_ipt = findViewById(R.id.lon_ipt);
        search_loc = findViewById(R.id.search_loc);
        write_loc = findViewById(R.id.write_loc);


        search_btn.setOnClickListener(v->{
            try {
                List<Address> addresses = geocoder.getFromLocationName(loc_ipt.getText().toString(),1);
                lat_val.setText("Latitude : "+String.valueOf((float) addresses.get(0).getLatitude()));
                lon_val.setText("Latitude : "+String.valueOf((float) addresses.get(0).getLongitude()));
            } catch (IOException e) {
                e.printStackTrace();
            }
        });

        search_loc.setOnClickListener(v->{
            List<Address> addresses = null;
            try {
                addresses = geocoder.getFromLocation(Double.valueOf(lat_ipt.getText().toString()),Double.valueOf(lon_ipt.getText().toString()),1);
            } catch (IOException e) {
                e.printStackTrace();
            }
            write_loc.setText("Latitude : "+addresses.get(0).getAddressLine(0));
        });

    }
}



// **********************************************
//SD Card
String text= "HELLLLLLLLLLLLOOOOOOOOOO";
byte[] t3= new byte[10];

File p = getApplicationContext().getFilesDir();

FileOutputStream fo = new FileOutputStream(new File(p,"testtrial.txt"));
fo.write(text.getBytes());
fo.close();

FileInputStream fi = new FileInputStream(new File(p , "testtrial.txt"));
fi.read(t3);


String s = new String(t3);
System.out.println(s);



// **********************************************
//DB
package com.example.sample;

import androidx.appcompat.app.AppCompatActivity;

import android.content.ContentValues;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;

import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    SQLiteDatabase db;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        EditText name = findViewById(R.id.name);
        EditText cont = findViewById(R.id.cont);
        TextView op = findViewById(R.id.op);
        Button r = findViewById(R.id.read);
        Button w = findViewById(R.id.write);

        DBHelper dbh = new DBHelper(this);
        db = dbh.getReadableDatabase();
        db = dbh.getWritableDatabase();
        r.setOnClickListener(v ->{
            Cursor c = db.rawQuery("select * from s", null);
            StringBuilder buff = new StringBuilder();
            while(c.moveToNext())
            {
                System.out.println("op: " + c.getString(0)+ " " + c.getString(1));
                buff.append(c.getString(0)+ " " + c.getString(1) + "\n");
            }
            op.setText(buff);
        });

        w.setOnClickListener(v -> {
            String n = name.getText().toString();
            String c = cont.getText().toString();

            ContentValues val = new ContentValues();
            val.put("name", n);
            val.put("cont", c);

            db.insert("s",null,val);
        });
        
        //Update similar to insert
        // update(table, where clause, selection args);
        db.update("student","rollno = " + rno, null);
        
        //Delete
        db.delete("student","rollno = " + rno, null);
        
        //Here we delete based on rno so make sure user gives rno as input using if cond.
        Toast.makeText(this, "msg", Toast.LENGTH_SHORT).show();
    }
}

package com.example.sample;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import androidx.annotation.Nullable;

public class DBHelper extends SQLiteOpenHelper {

    public DBHelper(@Nullable Context context) {
        super(context, "s.db", null,1);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        db.execSQL("create table s(name varchar(20), cont varchar(20))");
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        db.execSQL("drop table if exists s");
        onCreate(db);
    }
}


// **********************************************
//Thread
package com.example.threadingtrial;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.os.Handler;
import android.os.Looper;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    Button start_btn, resume_btn, stop_btn;
    TextView color_text, no_text;
    ImageView img_view;

    boolean stop_thread = false;

    Handler myHand = new Handler(Looper.getMainLooper());
    int counter = 0;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        start_btn = findViewById(R.id.start_btn);
        resume_btn = findViewById(R.id.resume_btn);
        stop_btn = findViewById(R.id.stop_btn);

        color_text = findViewById(R.id.color_text);
        no_text = findViewById(R.id.no_text);
        img_view = findViewById(R.id.img_view);

        start_btn.setOnClickListener(v->{
            resume_btn.setEnabled(false);
            new Thread(new ColorText()).start();
            new Thread(new MoveWheel()).start();
            new Thread(new NumberCounter()).start();
        });

        resume_btn.setOnClickListener(v->{
            stop_thread = false;
            new Thread(new ColorText()).start();
            new Thread(new MoveWheel()).start();
            new Thread(new NumberCounter()).start();
        });

        stop_btn.setOnClickListener(v->{
            stop_thread = true;
            start_btn.setEnabled(false);
            resume_btn.setEnabled(true);
        });

    }

    class ColorText implements Runnable{
        @Override
        public void run() {
            try {
                while(!stop_thread) {
                    color_text.setTextColor(getRandColor());
                    Thread.sleep(500);
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        int getRandColor(){
            return android.graphics.Color.rgb((int)(Math.random()*255),(int)(Math.random()*255),(int)(Math.random()*255));
        }
    }

    class MoveWheel implements Runnable{
        @Override
        public void run() {
            try {
                while(!stop_thread){
                    img_view.setTranslationX(img_view.getTranslationX()+10f);
                    Thread.sleep(500);
                }
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    class NumberCounter implements Runnable{
        @Override
        public void run() {
            while(!stop_thread){
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        no_text.setText(String.valueOf(counter));
                        counter++;
                    }
                });
                try {
                    Thread.sleep(500);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
}


// **********************************************
//Notification
private void showNotification(String title, String message) {
    NotificationChannel channel = new NotificationChannel("MyChannelID", "My Channel", NotificationManager.IMPORTANCE_DEFAULT);
    NotificationManager manager = getSystemService(NotificationManager.class);
    manager.createNotificationChannel(channel);
    NotificationCompat.Builder builder = new NotificationCompat.Builder(this, "MyChannelID");
    builder.setSmallIcon(R.drawable.ic_launcher_background)
            .setContentTitle(title)
            .setContentText(message);
    manager.notify(1, builder.build());
}

showNotification("read", "read from db");


// **********************************************
//Alarm
package com.example.sample;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.app.NotificationCompat;

import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.TimePicker;
import android.widget.Toast;

import java.time.LocalTime;

public class MainActivity extends AppCompatActivity {
    TimePicker tp;
    Button bt;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        tp = findViewById(R.id.tp);
        bt = findViewById(R.id.bt);
    }

    public void btclick(View view) {
        new Thread(new Alarmrunner()).start();
    }


    public class Alarmrunner implements Runnable{

        @Override
        public void run() {

            LocalTime localTime = LocalTime.now();
            int hrnow = localTime.getHour();
            int minnow = localTime.getMinute();

            int hralarm = tp.getHour();
            int minalarm = tp.getMinute();

            runOnUiThread(new Runnable() {
                @Override
                public void run() {
                    Toast.makeText(MainActivity.this, "hralarm=" + String.valueOf(hralarm) + " minalarm=" + String.valueOf(minalarm), Toast.LENGTH_SHORT).show();

                }
            });



            while (hrnow != hralarm || minnow != minalarm) {
                localTime = LocalTime.now();
                hrnow = localTime.getHour();
                minnow = localTime.getMinute();
                try {
                    Thread.sleep(1000);
                } catch (InterruptedException e) {
                    throw new RuntimeException(e);
                }
            }

            showNotification();



        }

        void showNotification(){

            NotificationChannel channel=new NotificationChannel("MYID","MYID", NotificationManager.IMPORTANCE_DEFAULT);
            NotificationManager manager=getSystemService(NotificationManager.class);
            manager.createNotificationChannel(channel);
            NotificationCompat.Builder builder = new NotificationCompat.Builder(MainActivity.this, "MYID");

            builder.setSmallIcon(R.drawable.ic_launcher_foreground)
                    .setContentTitle("Alarm");
            manager.notify(1, builder.build());
        }
    }
}


<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <TimePicker
        android:id="@+id/tp"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        app:layout_constraintTop_toTopOf="parent"/>

    <Button
        android:id="@+id/bt"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginTop="16dp"
        android:onClick="btclick"
        android:text="Set Alarm"
        app:layout_constraintTop_toBottomOf="@+id/tp"/>
</androidx.constraintlayout.widget.ConstraintLayout>


// **********************************************
//Spinner
// Get a reference to the Spinner
Spinner spinner = findViewById(R.id.spinner);

// Create a list of items for the Spinner
List<String> items = new ArrayList<>();
items.add("Item 1");
items.add("Item 2");
items.add("Item 3");

// Create an ArrayAdapter using the string array and a default Spinner layout
ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, items);

// Specify the layout to use when the list of choices appears
adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);

// Apply the adapter to the Spinner
spinner.setAdapter(adapter);

// Set a listener to handle Spinner item selection
spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
    @Override
    public void onItemSelected(AdapterView<?> parentView, View selectedItemView, int position, long id) {
        // Handle the selected item
        String selectedItem = (String) parentView.getItemAtPosition(position);
        Toast.makeText(MainActivity.this, "Selected: " + selectedItem, Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onNothingSelected(AdapterView<?> parent) {

    }
});

//Manifest
<uses-feature
        android:name="android.hardware.telephony"
        android:required="false" />

    <uses-permission android:name="android.permission.INTERNET"></uses-permission>
    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
    <uses-permission android:name="android.permission.SEND_SMS" />
    <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
    <uses-permission android:name="android.permission.WAKE_LOCK"/>
 